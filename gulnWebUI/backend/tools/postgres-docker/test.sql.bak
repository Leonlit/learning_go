CREATE EXTENSION IF NOT EXISTS "uuid-ossp";
CREATE TABLE users (
    user_uuid UUID NOT NULL PRIMARY KEY,
    username TEXT NOT NULL,
    created_time TIMESTAMPTZ,
    password_hash TEXT NOT NULL
);

CREATE TABLE projects (
    project_uuid UUID NOT NULL PRIMARY KEY,
    user_uuid UUID NOT NULL REFERENCES users(user_uuid),
    project_name TEXT,
    project_created TIMESTAMPTZ
)

CREATE TABLE scans (
    scan_uuid UUID NOT NULL PRIMARY KEY,
    project_uuid UUID NOT NULL REFERENCES projects(project_uuid),
    scan_name TEXT,
    scan_start_time TIMESTAMPTZ,
    scan_finish_time TIMESTAMPTZ,
    hosts_up INT,
    hosts_down INT,
    total_hosts INT
);

DO $$
BEGIN
    -- Check if the type 'host_status' exists
    IF NOT EXISTS (SELECT 1 FROM pg_type WHERE typname = 'host_status') THEN
        CREATE TYPE host_status AS ENUM ('up', 'down');
    END IF;
END $$;

CREATE TABLE hosts (
    host_uuid UUID NOT NULL PRIMARY KEY,
    scan_uuid UUID NOT NULL REFERENCES scans(scan_uuid) ON DELETE CASCADE,
    ip_address VARCHAR(45),
    addr_type VARCHAR(10),
    hostname TEXT,
    status host_status DEFAULT 'up'
);

-- Create port_protocol enum type if it doesn't exist
DO $$
BEGIN
    IF NOT EXISTS (SELECT 1 FROM pg_type WHERE typname = 'port_protocol') THEN
        CREATE TYPE port_protocol AS ENUM ('tcp', 'udp');
    END IF;
END $$;

-- Create port_state enum type if it doesn't exist
DO $$
BEGIN
    IF NOT EXISTS (SELECT 1 FROM pg_type WHERE typname = 'port_state') THEN
        CREATE TYPE port_state AS ENUM ('open', 'closed', 'filtered');
    END IF;
END $$;

CREATE TABLE ports (
    port_uuid UUID NOT NULL PRIMARY KEY,
    host_uuid UUID NOT NULL REFERENCES hosts(host_uuid) ON DELETE CASCADE,
    port_number INT,
    protocol port_protocol,
    state port_state,
    reason TEXT
);

CREATE TABLE services (
    service_uuid UUID NOT NULL PRIMARY KEY,
    port_uuid UUID NOT NULL REFERENCES ports(port_uuid) ON DELETE CASCADE,
    service_name TEXT,
    service_product TEXT,
    service_version TEXT,
    service_fp TEXT,
    service_cpe TEXT
);

CREATE TABLE scripts (
    script_uuid UUID NOT NULL PRIMARY KEY,
    port_uuid UUID NOT NULL REFERENCES ports(port_uuid) ON DELETE CASCADE,
    script_id TEXT,
    script_output TEXT
);

CREATE TABLE scripts_element (
    script_element_uuid UUID NOT NULL PRIMARY KEY,
    script_uuid UUID NOT NULL REFERENCES scripts(script_uuid) ON DELETE CASCADE,
    elem_key TEXT,
    elem_value TEXT
);